/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import dominio.d_gastos_inq;
import dominio.d_inquilino;
import dominio.d_propietario;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import static jdk.nashorn.internal.objects.NativeString.toUpperCase;
import presentacion.paneles.p_control;

/**
 *
 * @author Gonzalo
 */
public class p_gastocta_inq extends javax.swing.JDialog {

    d_inquilino inq = null;
    d_propietario prop = null;

    /**
     * Creates new form p_gastocta_inq1
     */
    public p_gastocta_inq(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        //cargariva(); obtiene de la tabla parametros
        //this.setMinimumSize(new Dimension(800, 600)); 
        //cmbtipo.setSelectedItem("ALQUILER DIAS");
        generarsaldoalquilerdias();
        cargarmqpaqp();
    }

    void cargarmqpaqp() {
        SimpleDateFormat formateador1 = new SimpleDateFormat("M", new Locale("es_ES"));
        SimpleDateFormat formateador2 = new SimpleDateFormat("yyyy", new Locale("es_ES"));

        txtmqp.setText(formateador1.format(new Date()));
        txtaqp.setText(formateador2.format(new Date()));
    }

    void generarsaldoalquilerdias() {
        p_control con = p_control.getInstancia();
        Float totalsaldodias = 0f;
        Integer cantdiasmesalq = 0;
        Integer difcantdiasmesalq = 0;

        this.inq = con.inq;
        if (this.inq != null) {
            txtpropid.setText(inq.getProp_id().toString());
            txtinqcasa.setText(inq.getInq_casa().toString());
            txtpropid.setEnabled(false);
            txtinqcasa.setEnabled(false);
            lblnombreinq.setText(inq.getInq_nombre());
            cantdiasmesalq = inq.obtenerUltimoDiaMes(devuelveanio(inq.getInq_fechaic()), devuelvemes(inq.getInq_fechaic()));
            difcantdiasmesalq = cantdiasmesalq - devuelvedia(inq.getInq_fechaic());
            totalsaldodias = inq.getInq_impalq() * difcantdiasmesalq / cantdiasmesalq;
            try {
                txtimporte.setText(con.mostrarnumero(totalsaldodias));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            cmbtipo.setSelectedItem("ALQUILER DIAS");
            cmbtipo.setEnabled(false);
            txtdetalle.setEnabled(false);
            txtmqp.setText(devuelvemes(inq.getInq_fechaic()).toString());
            txtaqp.setText(devuelveanio(inq.getInq_fechaic()).toString());
            txtmqp.setEnabled(false);
            txtaqp.setEnabled(false);
        }
    }

    Integer devuelvedia(Date fecha) {
        String formato = "dd";
        SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
        return Integer.parseInt(dateFormat.format(fecha));
    }

    Integer devuelvemes(Date fecha) {
        String formato = "MM";
        SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
        return Integer.parseInt(dateFormat.format(fecha));
    }

    Integer devuelveanio(Date fecha) {
        String formato = "yyyy";
        SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
        return Integer.parseInt(dateFormat.format(fecha));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        txtpropid = new javax.swing.JTextField();
        txtmqp = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtaqp = new javax.swing.JTextField();
        txtdetalle = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtimporte = new javax.swing.JTextField();
        txtinqcasa = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cmbtipo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        lblnombreinq = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GASTOS A PAGAR DE CUENTA INGRESADA");
        getContentPane().setLayout(null);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("MQP");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(10, 240, 33, 17);

        txtpropid.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtpropid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpropidActionPerformed(evt);
            }
        });
        txtpropid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpropidKeyPressed(evt);
            }
        });
        getContentPane().add(txtpropid);
        txtpropid.setBounds(10, 40, 138, 30);

        txtmqp.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtmqp);
        txtmqp.setBounds(10, 260, 138, 30);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("IMPORTE");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 190, 64, 17);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("AQP");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(10, 290, 29, 17);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("DETALLE");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(200, 240, 80, 17);

        txtaqp.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtaqp);
        txtaqp.setBounds(10, 310, 138, 30);

        txtdetalle.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtdetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdetalleActionPerformed(evt);
            }
        });
        getContentPane().add(txtdetalle);
        txtdetalle.setBounds(200, 260, 138, 80);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("ID INQ");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(10, 70, 43, 17);

        txtimporte.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtimporte);
        txtimporte.setBounds(10, 210, 138, 30);

        txtinqcasa.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtinqcasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtinqcasaActionPerformed(evt);
            }
        });
        txtinqcasa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtinqcasaKeyPressed(evt);
            }
        });
        getContentPane().add(txtinqcasa);
        txtinqcasa.setBounds(10, 90, 138, 30);

        jButton1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton1.setText("BUSCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(170, 40, 120, 30);

        jButton2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton2.setText("CONFIRMA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(440, 210, 120, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("TIPO");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(200, 190, 32, 17);

        cmbtipo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        cmbtipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SALDO ALQUILER", "ALQUILER DIAS", "TASA MUNICIPAL", "OSE", "GASTOS COMUNES", "OTROS (INGRESAR DETALLE)" }));
        cmbtipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbtipoActionPerformed(evt);
            }
        });
        getContentPane().add(cmbtipo);
        cmbtipo.setBounds(200, 210, 138, 30);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("ID PROP");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 20, 57, 17);

        lblnombreinq.setBackground(java.awt.Color.green);
        lblnombreinq.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblnombreinq.setOpaque(true);
        getContentPane().add(lblnombreinq);
        lblnombreinq.setBounds(10, 140, 550, 40);

        setBounds(0, 0, 582, 400);
    }// </editor-fold>//GEN-END:initComponents

    private void txtpropidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpropidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpropidActionPerformed

    private void txtdetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdetalleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdetalleActionPerformed

    private void txtinqcasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtinqcasaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtinqcasaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        funcbuscar();
    }//GEN-LAST:event_jButton1ActionPerformed

    void funcbuscar() {
        p_control con = p_control.getInstancia();
        inq = new d_inquilino();
        d_propietario prop1 = new d_propietario();
        Integer prop_id = 0;
        Integer inq_id = 0;

        lblnombreinq.setText("-");

        try {
            prop_id = Integer.parseInt(txtpropid.getText());
            inq_id = Integer.parseInt(txtinqcasa.getText());
            inq = inq.buscarinquilino(prop_id, inq_id);
            if (inq == null) {
                JOptionPane.showMessageDialog(this, toUpperCase("inquilino no existe"), "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            prop1 = prop1.buscarpropietario(inq.getProp_id());
            if (prop1 != null) {
                con.guardarprimermovimiento(prop1);
            }
            lblnombreinq.setText(inq.getInq_nombre());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        p_control con = p_control.getInstancia();
        d_propietario prop1 = new d_propietario();
        d_gastos_inq gas = new d_gastos_inq();
        Float importe = 0.0F;
        Date fechaingresada = null;

        try {
            //controlar campos
            if (inq == null) {
                JOptionPane.showMessageDialog(this, toUpperCase("inquilino no existe"), "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            prop1 = prop1.buscarpropietario(inq.getProp_id());
            if (prop1 != null) {
                con.guardarprimermovimiento(prop1);
            }
            gas.setProp_id(inq.getProp_id());
            gas.setInq_casa(inq.getInq_casa());
            importe = con.guardarnumero(txtimporte.getText());
            gas.setImporte(importe);
            gas.setDetalle(devuelvedetalle());
            gas.setAqp(Integer.parseInt(txtaqp.getText()));
            gas.setMqp(Integer.parseInt(txtmqp.getText()));
            if (gas.getMqp() < 1 || gas.getMqp() > 12) {
                JOptionPane.showMessageDialog(this, toUpperCase("el mes debe ser entre 1 y 12"), "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (gas.getAqp() < 1) {
                JOptionPane.showMessageDialog(this, toUpperCase("el año no puede ser 0"), "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            gas.setEstado(0);
            int ax = JOptionPane.showConfirmDialog(null,
                    "¿DESEA GUARDAR LOS DATOS?", "CONFIRMACION", JOptionPane.YES_NO_CANCEL_OPTION);
            if (ax == JOptionPane.YES_OPTION) {
                //controlar fecha ingresada con fecha apertura contrato del inq
                int dia = devuelvedia(inq.getInq_fechaic());
                fechaingresada = parsefechadate(dia + "/" + gas.getMqp() + "/" + gas.getAqp());
                //chequear el dia que compara contra el dia de inicio de contrato
                int compara = fechaingresada.compareTo(inq.getInq_fechaic());
                if (compara < 0) {
                    int ax1 = JOptionPane.showConfirmDialog(null, toUpperCase("el gasto ingresado tiene una fecha anterior a la fecha de inicio del contrato, ¿desea continuar?"), "CONFIRMACION", JOptionPane.YES_NO_CANCEL_OPTION);
                    if (ax1 == JOptionPane.YES_OPTION) {
                        gas.guardargastoinq(gas);
                        
                        con.escribirfichero("INQ - se ingresa gasto a cuenta id prop: " + gas.getProp_id() + " -- id inq: " + gas.getInq_casa()+" -- mqp: " + gas.getMqp() + " -- " + "aqp: " + gas.getAqp() + " -- " + "detalle: " + gas.getDetalle() + " -- " + "importe: " + con.mostrarnumero(gas.getImporte()));
                        
                        //ACTUALIZA EL SALDO ACTUAL DEL INQUILINO
                        if (aplicaactualizarsaldo(gas.getMqp(), gas.getAqp())) {
                            inq.actualizarsaldo(inq.getProp_id(), inq.getInq_casa(), (inq.getInq_saldo() + importe));
                        }
                        JOptionPane.showMessageDialog(this, "GASTO GUARDADO CORRECTAMENTE", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                        limpiarcampos();
                        this.dispose();
                    }
                } else {
                    gas.guardargastoinq(gas);
                    con.escribirfichero("INQ - se ingresa gasto a cuenta id prop: " + gas.getProp_id() + " -- id inq: " + gas.getInq_casa()+" -- mqp: " + gas.getMqp() + " -- " + "aqp: " + gas.getAqp() + " -- " + "detalle: " + gas.getDetalle() + " -- " + "importe: " + con.mostrarnumero(gas.getImporte()));
                    //ACTUALIZA EL SALDO ACTUAL DEL INQUILINO
                    //CHEQUEAR QUE SI ES DEL MES ACTUAL NO SUMAR A LA DEUDA
                    if (aplicaactualizarsaldo(gas.getMqp(), gas.getAqp())) {
                        inq.actualizarsaldo(inq.getProp_id(), inq.getInq_casa(), (inq.getInq_saldo() + importe));
                    }
                    JOptionPane.showMessageDialog(this, "GASTO GUARDADO CORRECTAMENTE", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                    limpiarcampos();
                    this.dispose();
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    Boolean aplicaactualizarsaldo(int mqp, int aqp) {
        Date fecha = new Date();
        int mqpfechaactual = devuelvemes(fecha);
        int aqpfechaactual = devuelveanio(fecha);

        if (mqpfechaactual == mqp && aqpfechaactual == aqp) {
            return false;
        }
        return true;
    }


    private void cmbtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbtipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbtipoActionPerformed

    private void txtpropidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpropidKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            funcbuscar();
        }
    }//GEN-LAST:event_txtpropidKeyPressed

    private void txtinqcasaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtinqcasaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            funcbuscar();
        }
    }//GEN-LAST:event_txtinqcasaKeyPressed

    void limpiarcampos() {
        txtpropid.setText("");
        txtinqcasa.setText("");
        lblnombreinq.setText("-");
        txtdetalle.setText("");
        txtimporte.setText("");
        txtaqp.setText("");
        txtmqp.setText("");
        lblnombreinq.setText("-");
        inq = null;
    }

    String devuelvedetalle() throws Exception {
        String detalle = "";
        if (cmbtipo.getSelectedItem().equals("OTROS (INGRESAR DETALLE)")) {
            if (txtdetalle.getText().equals("")) {
                throw new Exception("debe ingresar un detalle");
            }
            detalle = txtdetalle.getText();
        }
        if (!cmbtipo.getSelectedItem().equals("OTROS (INGRESAR DETALLE)")) {
            detalle = cmbtipo.getSelectedItem().toString();
        }
        return detalle;
    }

    Date parsefechadate(String fecha) throws Exception {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaDate = null;

        try {
            fechaDate = formato.parse(fecha);
        } catch (ParseException ex) {
            throw new Exception(ex.getMessage());
        }
        return fechaDate;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(p_gastocta_inq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(p_gastocta_inq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(p_gastocta_inq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(p_gastocta_inq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                p_gastocta_inq dialog = new p_gastocta_inq(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbtipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblnombreinq;
    private javax.swing.JTextField txtaqp;
    private javax.swing.JTextField txtdetalle;
    private javax.swing.JTextField txtimporte;
    private javax.swing.JTextField txtinqcasa;
    private javax.swing.JTextField txtmqp;
    private javax.swing.JTextField txtpropid;
    // End of variables declaration//GEN-END:variables
}
